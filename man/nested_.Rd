% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nested_.R
\name{nested_}
\alias{nested_}
\title{Nested \link[base]{factor}s}
\usage{
nested_(lang, data, drop = TRUE, sep = ".", lex.order = TRUE)
}
\arguments{
\item{lang}{any \link[base]{language} of a nested structure, e.g., \code{~c1/c2} or \code{c1/c2}}

\item{data}{\link[base]{data.frame}}

\item{drop}{see function \link[base]{interaction}, default \code{TRUE}}

\item{sep}{see function \link[base]{interaction}}

\item{lex.order}{see function \link[base]{interaction}, default \code{TRUE}}
}
\value{
Function \link{nested_} returns a \link[base]{factor} (from function \link[base]{interaction}) with additional \link[base]{attributes},
\describe{
\item{\code{attr(.,'name1')}}{\link[base]{character} scalar}
\item{\code{attr(.,'f1')}}{\link[base]{factor}}
}
}
\description{
..
}
\details{
Function \link{nested_} ..
}
\note{
R base function \link[base]{interaction} correctly handles syntactically invalid names (see \link[base]{make.names}).
}
\examples{
data(farms, package = 'MASS')
interaction(farms[c('Mois', 'Manag')], drop = TRUE, lex.order = TRUE)
(f1 = nested_(~ Mois/Manag, data = farms, drop = TRUE, lex.order = TRUE))
  
# first argument can be 'call' starting with '~'
stopifnot(identical(f1, nested_(quote(~ Mois/Manag), data = farms, drop = TRUE)))
 
# or can be just any 'language'
stopifnot(identical(f1, nested_(quote(Mois/Manag), data = farms, drop = TRUE)))
 
}
\keyword{internal}
